{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lucascruz/Documents/dev/goweek/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lucascruz/Documents/dev/goweek/frontend/src/pages/Timeline.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport socket from 'socket.io-client';\nimport twitterLogo from \"../twitter.svg\";\nimport './Timeline.css';\nimport Tweet from '../components/Tweet';\n\nvar Timeline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timeline, _Component);\n\n  function Timeline() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timeline)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tweets: [],\n      newTweet: ''\n    };\n\n    _this.subscribeToEvents = function () {\n      var io = socket('http://localhost:3000');\n      io.on('tweet', function (data) {\n        _this.setState({\n          tweets: [data].concat(_toConsumableArray(_this.state.tweets))\n        });\n      });\n      io.on('like', function (data) {\n        _this.setState({\n          tweets: _this.state.tweets.map(function (tweet) {\n            return tweet._id === data._id ? data : tweet;\n          })\n        });\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        newTweet: e.target.value\n      });\n    };\n\n    _this.handleNewTweet =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var content, author;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(e.keyCode !== 13)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                content = _this.state.newTweet;\n                author = localStorage.getItem(\"@GoTwitter:username\");\n                _context.next = 6;\n                return api.post(\"tweets\", {\n                  content: content,\n                  author: author\n                });\n\n              case 6:\n                _this.setState({\n                  newTweet: ''\n                });\n\n                console.log(content, author);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.subscribeToEvents();\n                _context2.next = 3;\n                return api.get('tweets');\n\n              case 3:\n                response = _context2.sent;\n                this.setState({\n                  tweets: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"timeline-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        height: 24,\n        src: twitterLogo,\n        alt: \"GoTwitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        value: this.state.newTweet,\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleNewTweet,\n        placeholder: \"O que est\\xE1 acontecendo ?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"tweet-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.tweets.map(function (tweet) {\n        return React.createElement(Tweet, {\n          key: tweet._id,\n          tweet: tweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Timeline;\n}(Component);\n\nexport { Timeline as default };","map":{"version":3,"sources":["/Users/lucascruz/Documents/dev/goweek/frontend/src/pages/Timeline.js"],"names":["React","Component","api","socket","Tweet","Timeline","state","tweets","newTweet","subscribeToEvents","io","on","data","setState","map","tweet","_id","handleInputChange","e","target","value","handleNewTweet","keyCode","content","author","localStorage","getItem","post","console","log","get","response","twitterLogo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport api from '../services/api';\nimport socket from 'socket.io-client';\n\nimport twitterLogo from '../twitter.svg';\nimport './Timeline.css';\n\nimport Tweet from '../components/Tweet';\n\nexport default class Timeline extends Component {\n    state = {\n        tweets: [],\n        newTweet: ''\n    };\n\n    async componentDidMount() {\n        this.subscribeToEvents();\n\n        const response = await api.get('tweets');\n\n        this.setState({ tweets: response.data })\n    };\n\n    subscribeToEvents = () => {\n        const io = socket('http://localhost:3000');\n\n        io.on('tweet', data => {\n            this.setState({ tweets: [data, ...this.state.tweets] })\n        });\n        io.on('like', data => {\n            this.setState({ tweets: this.state.tweets.map(tweet => \n                tweet._id === data._id ? data : tweet\n            ) });\n        });\n    };\n\n    handleInputChange = e => {\n        this.setState({ newTweet: e.target.value });\n    };\n\n    handleNewTweet = async e => {\n        if (e.keyCode !== 13) return;\n\n        const content =  this.state.newTweet;\n        const author = localStorage.getItem(\"@GoTwitter:username\");\n\n        await api.post(\"tweets\", { content, author });\n\n        this.setState({ newTweet: '' });\n\n        console.log(content, author);\n    };    \n\n    render() {\n    return (\n        <div className=\"timeline-wrapper\">\n            <img height={24} src={twitterLogo} alt=\"GoTwitter\" />\n\n            <form>\n                <textarea \n                    value={this.state.newTweet}\n                    onChange={this.handleInputChange}\n                    onKeyDown={this.handleNewTweet}\n                    placeholder=\"O que está acontecendo ?\"\n                />\n            </form>\n            <ul className=\"tweet-list\">\n                { this.state.tweets.map(tweet => (\n                    <Tweet key={tweet._id} tweet={tweet} />\n                ))}\n            </ul>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}